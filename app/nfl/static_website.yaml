AWSTemplateFormatVersion: 2010-09-09
Description: Static website hosting with S3 and CloudFront.

Resources:
  ContentBucket:
    Type: "AWS::S3::Bucket"

  CloudFrontOriginAccessIdentity:
    Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Ref ContentBucket

  S3ReadPolicy:
    Type: "AWS::S3::BucketPolicy"
    Properties:
      Bucket: !Ref ContentBucket
      PolicyDocument:
        Statement:
          - Action: "s3:GetObject"
            Effect: Allow
            Resource:
              - !Sub "${ContentBucket.Arn}"
              - !Sub "${ContentBucket.Arn}/*"
            Principal:
              CanonicalUser: !GetAtt CloudFrontOriginAccessIdentity.S3CanonicalUserId

  CloudFrontDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          Compress: true
          DefaultTTL: 3600
          ForwardedValues:
            QueryString: true
          TargetOriginId: s3origin
          ViewerProtocolPolicy: redirect-to-https
        DefaultRootObject: "index.html"
        Enabled: true
        HttpVersion: http2
        Origins:
          - DomainName: !GetAtt ContentBucket.RegionalDomainName
            Id: s3origin
            S3OriginConfig:
              OriginAccessIdentity: !Sub >-
                origin-access-identity/cloudfront/${CloudFrontOriginAccessIdentity}
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html

Outputs:
  CloudFrontDistributionUrl:
    Description: NFL App CloudFront distribution URL
    Value: !Sub https://${CloudFrontDistribution.DomainName}
    Export:
      Name: !Sub ${AWS::StackName}-CloudFrontDistributionUrl
  ContentBucket:
    Description: NFL App Content Bucket
    Value: !Ref ContentBucket
    Export:
      Name: !Sub ${AWS::StackName}-ContentBucket
